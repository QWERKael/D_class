// Code generated by protoc-gen-go. DO NOT EDIT.
// source: watch.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Items int32

const (
	Items_MainServ Items = 0
	Items_MySQL    Items = 1
)

var Items_name = map[int32]string{
	0: "MainServ",
	1: "MySQL",
}

var Items_value = map[string]int32{
	"MainServ": 0,
	"MySQL":    1,
}

func (x Items) String() string {
	return proto.EnumName(Items_name, int32(x))
}

func (Items) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{0}
}

type RegReply_RegState int32

const (
	RegReply_Agree  RegReply_RegState = 0
	RegReply_Refuse RegReply_RegState = 1
)

var RegReply_RegState_name = map[int32]string{
	0: "Agree",
	1: "Refuse",
}

var RegReply_RegState_value = map[string]int32{
	"Agree":  0,
	"Refuse": 1,
}

func (x RegReply_RegState) String() string {
	return proto.EnumName(RegReply_RegState_name, int32(x))
}

func (RegReply_RegState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{1, 0}
}

type Ping_PingState int32

const (
	Ping_Active   Ping_PingState = 0
	Ping_Shutdown Ping_PingState = 1
	Ping_Sleep    Ping_PingState = 2
	Ping_Quit     Ping_PingState = 3
)

var Ping_PingState_name = map[int32]string{
	0: "Active",
	1: "Shutdown",
	2: "Sleep",
	3: "Quit",
}

var Ping_PingState_value = map[string]int32{
	"Active":   0,
	"Shutdown": 1,
	"Sleep":    2,
	"Quit":     3,
}

func (x Ping_PingState) String() string {
	return proto.EnumName(Ping_PingState_name, int32(x))
}

func (Ping_PingState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{2, 0}
}

type Pong_PongState int32

const (
	Pong_Received Pong_PongState = 0
	Pong_Shutdown Pong_PongState = 1
	Pong_Error    Pong_PongState = 2
)

var Pong_PongState_name = map[int32]string{
	0: "Received",
	1: "Shutdown",
	2: "Error",
}

var Pong_PongState_value = map[string]int32{
	"Received": 0,
	"Shutdown": 1,
	"Error":    2,
}

func (x Pong_PongState) String() string {
	return proto.EnumName(Pong_PongState_name, int32(x))
}

func (Pong_PongState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{3, 0}
}

type RegRequest struct {
	Item                 Items    `protobuf:"varint,1,opt,name=item,proto3,enum=pb.Items" json:"item,omitempty"`
	LocalAddr            string   `protobuf:"bytes,2,opt,name=local_addr,json=localAddr,proto3" json:"local_addr,omitempty"`
	Desc                 string   `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegRequest) Reset()         { *m = RegRequest{} }
func (m *RegRequest) String() string { return proto.CompactTextString(m) }
func (*RegRequest) ProtoMessage()    {}
func (*RegRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{0}
}

func (m *RegRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegRequest.Unmarshal(m, b)
}
func (m *RegRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegRequest.Marshal(b, m, deterministic)
}
func (m *RegRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegRequest.Merge(m, src)
}
func (m *RegRequest) XXX_Size() int {
	return xxx_messageInfo_RegRequest.Size(m)
}
func (m *RegRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegRequest proto.InternalMessageInfo

func (m *RegRequest) GetItem() Items {
	if m != nil {
		return m.Item
	}
	return Items_MainServ
}

func (m *RegRequest) GetLocalAddr() string {
	if m != nil {
		return m.LocalAddr
	}
	return ""
}

func (m *RegRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type RegReply struct {
	State                RegReply_RegState `protobuf:"varint,1,opt,name=state,proto3,enum=pb.RegReply_RegState" json:"state,omitempty"`
	UniCode              string            `protobuf:"bytes,2,opt,name=uni_code,json=uniCode,proto3" json:"uni_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RegReply) Reset()         { *m = RegReply{} }
func (m *RegReply) String() string { return proto.CompactTextString(m) }
func (*RegReply) ProtoMessage()    {}
func (*RegReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{1}
}

func (m *RegReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegReply.Unmarshal(m, b)
}
func (m *RegReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegReply.Marshal(b, m, deterministic)
}
func (m *RegReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegReply.Merge(m, src)
}
func (m *RegReply) XXX_Size() int {
	return xxx_messageInfo_RegReply.Size(m)
}
func (m *RegReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegReply proto.InternalMessageInfo

func (m *RegReply) GetState() RegReply_RegState {
	if m != nil {
		return m.State
	}
	return RegReply_Agree
}

func (m *RegReply) GetUniCode() string {
	if m != nil {
		return m.UniCode
	}
	return ""
}

type Ping struct {
	Item                 Items          `protobuf:"varint,1,opt,name=item,proto3,enum=pb.Items" json:"item,omitempty"`
	PingState            Ping_PingState `protobuf:"varint,2,opt,name=ping_state,json=pingState,proto3,enum=pb.Ping_PingState" json:"ping_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{2}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetItem() Items {
	if m != nil {
		return m.Item
	}
	return Items_MainServ
}

func (m *Ping) GetPingState() Ping_PingState {
	if m != nil {
		return m.PingState
	}
	return Ping_Active
}

type Pong struct {
	Item                 Items          `protobuf:"varint,1,opt,name=item,proto3,enum=pb.Items" json:"item,omitempty"`
	PongState            Pong_PongState `protobuf:"varint,2,opt,name=pong_state,json=pongState,proto3,enum=pb.Pong_PongState" json:"pong_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{3}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetItem() Items {
	if m != nil {
		return m.Item
	}
	return Items_MainServ
}

func (m *Pong) GetPongState() Pong_PongState {
	if m != nil {
		return m.PongState
	}
	return Pong_Received
}

func init() {
	proto.RegisterEnum("pb.Items", Items_name, Items_value)
	proto.RegisterEnum("pb.RegReply_RegState", RegReply_RegState_name, RegReply_RegState_value)
	proto.RegisterEnum("pb.Ping_PingState", Ping_PingState_name, Ping_PingState_value)
	proto.RegisterEnum("pb.Pong_PongState", Pong_PongState_name, Pong_PongState_value)
	proto.RegisterType((*RegRequest)(nil), "pb.RegRequest")
	proto.RegisterType((*RegReply)(nil), "pb.RegReply")
	proto.RegisterType((*Ping)(nil), "pb.Ping")
	proto.RegisterType((*Pong)(nil), "pb.Pong")
}

func init() { proto.RegisterFile("watch.proto", fileDescriptor_c826da73fff4a2c7) }

var fileDescriptor_c826da73fff4a2c7 = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xd1, 0xab, 0xd3, 0x30,
	0x14, 0xc6, 0x9b, 0xde, 0xf6, 0xda, 0x1c, 0x2f, 0x23, 0x04, 0x84, 0x39, 0x18, 0xcc, 0x80, 0x30,
	0x26, 0x0c, 0x9d, 0x6f, 0xbe, 0x4d, 0x11, 0x14, 0x1c, 0xb8, 0xf6, 0x41, 0xf0, 0xc1, 0xd1, 0x35,
	0xc7, 0x2e, 0xd0, 0x35, 0x35, 0x4d, 0x37, 0xf6, 0x3f, 0xf8, 0xe8, 0x1f, 0x2c, 0xc9, 0xd6, 0xe9,
	0xc3, 0x40, 0x5f, 0xca, 0xe1, 0x9c, 0xaf, 0xdf, 0xf7, 0x4b, 0x72, 0xe0, 0xf1, 0x31, 0xb7, 0xc5,
	0x6e, 0xde, 0x18, 0x6d, 0x35, 0x0f, 0x9b, 0xad, 0xf8, 0x06, 0x90, 0x62, 0x99, 0xe2, 0x8f, 0x0e,
	0x5b, 0xcb, 0xc7, 0x10, 0x29, 0x8b, 0xfb, 0x21, 0x99, 0x90, 0xe9, 0x60, 0x41, 0xe7, 0xcd, 0x76,
	0xfe, 0xd1, 0xe2, 0xbe, 0x4d, 0x7d, 0x9b, 0x8f, 0x01, 0x2a, 0x5d, 0xe4, 0xd5, 0x26, 0x97, 0xd2,
	0x0c, 0xc3, 0x09, 0x99, 0xd2, 0x94, 0xfa, 0xce, 0x52, 0x4a, 0xc3, 0x39, 0x44, 0x12, 0xdb, 0x62,
	0x78, 0xe7, 0x07, 0xbe, 0x16, 0x1d, 0x24, 0xde, 0xbf, 0xa9, 0x4e, 0xfc, 0x05, 0xc4, 0xad, 0xcd,
	0x2d, 0x5e, 0xec, 0x9f, 0x38, 0xfb, 0x7e, 0xe8, 0x8a, 0xcc, 0x0d, 0xd3, 0xb3, 0x86, 0x3f, 0x85,
	0xa4, 0xab, 0xd5, 0xa6, 0xd0, 0x12, 0x2f, 0x49, 0x8f, 0xba, 0x5a, 0xbd, 0xd3, 0x12, 0xc5, 0x33,
	0xef, 0xe9, 0xd5, 0x9c, 0x42, 0xbc, 0x2c, 0x0d, 0x22, 0x0b, 0x38, 0xc0, 0x7d, 0x8a, 0xdf, 0xbb,
	0x16, 0x19, 0x11, 0xbf, 0x08, 0x44, 0x9f, 0x55, 0x5d, 0xfe, 0xeb, 0x44, 0xaf, 0x00, 0x1a, 0x55,
	0x97, 0x9b, 0x33, 0x57, 0xe8, 0x45, 0xdc, 0x89, 0xdc, 0xcf, 0xfe, 0x73, 0x86, 0xa2, 0x4d, 0x5f,
	0x8a, 0x37, 0x40, 0xaf, 0x7d, 0x97, 0xb9, 0x2c, 0xac, 0x3a, 0xb8, 0xfc, 0x07, 0x48, 0xb2, 0x5d,
	0x67, 0xa5, 0x3e, 0xd6, 0x8c, 0x38, 0xb0, 0xac, 0x42, 0x6c, 0x58, 0xc8, 0x13, 0x88, 0xd6, 0x9d,
	0xb2, 0xec, 0x4e, 0xfc, 0x74, 0x58, 0xfa, 0xff, 0xb0, 0xf4, 0x4d, 0x2c, 0xed, 0xb0, 0xf4, 0x1f,
	0xac, 0xbe, 0x14, 0x0b, 0xa0, 0xd7, 0xbe, 0x43, 0x49, 0xb1, 0x40, 0x75, 0x40, 0x79, 0x0b, 0xec,
	0xbd, 0x31, 0xda, 0xb0, 0x70, 0x36, 0x81, 0xd8, 0xa7, 0x3a, 0xc5, 0x2a, 0x57, 0x75, 0x86, 0xe6,
	0xc0, 0x02, 0xa7, 0x58, 0x9d, 0xb2, 0xf5, 0x27, 0x46, 0x16, 0x5f, 0x21, 0xfe, 0xe2, 0x36, 0x86,
	0xcf, 0xfc, 0x9d, 0xab, 0xd6, 0xa2, 0xe1, 0x83, 0xeb, 0xc3, 0xf9, 0xad, 0x19, 0x3d, 0xfc, 0xfd,
	0x90, 0x22, 0xe0, 0xcf, 0x81, 0x7e, 0xc0, 0xdc, 0xd8, 0xb7, 0x98, 0x5b, 0x9e, 0xf4, 0xb7, 0x39,
	0x4a, 0xfa, 0x03, 0x88, 0x60, 0x4a, 0x5e, 0x92, 0xed, 0xbd, 0xdf, 0xc2, 0xd7, 0xbf, 0x03, 0x00,
	0x00, 0xff, 0xff, 0x36, 0xc7, 0xac, 0x7d, 0x94, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WatchClient is the client API for Watch service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WatchClient interface {
	Register(ctx context.Context, in *RegRequest, opts ...grpc.CallOption) (*RegReply, error)
	HeartBeat(ctx context.Context, opts ...grpc.CallOption) (Watch_HeartBeatClient, error)
}

type watchClient struct {
	cc *grpc.ClientConn
}

func NewWatchClient(cc *grpc.ClientConn) WatchClient {
	return &watchClient{cc}
}

func (c *watchClient) Register(ctx context.Context, in *RegRequest, opts ...grpc.CallOption) (*RegReply, error) {
	out := new(RegReply)
	err := c.cc.Invoke(ctx, "/pb.Watch/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watchClient) HeartBeat(ctx context.Context, opts ...grpc.CallOption) (Watch_HeartBeatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Watch_serviceDesc.Streams[0], "/pb.Watch/HeartBeat", opts...)
	if err != nil {
		return nil, err
	}
	x := &watchHeartBeatClient{stream}
	return x, nil
}

type Watch_HeartBeatClient interface {
	Send(*Ping) error
	Recv() (*Pong, error)
	grpc.ClientStream
}

type watchHeartBeatClient struct {
	grpc.ClientStream
}

func (x *watchHeartBeatClient) Send(m *Ping) error {
	return x.ClientStream.SendMsg(m)
}

func (x *watchHeartBeatClient) Recv() (*Pong, error) {
	m := new(Pong)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WatchServer is the server API for Watch service.
type WatchServer interface {
	Register(context.Context, *RegRequest) (*RegReply, error)
	HeartBeat(Watch_HeartBeatServer) error
}

// UnimplementedWatchServer can be embedded to have forward compatible implementations.
type UnimplementedWatchServer struct {
}

func (*UnimplementedWatchServer) Register(ctx context.Context, req *RegRequest) (*RegReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedWatchServer) HeartBeat(srv Watch_HeartBeatServer) error {
	return status.Errorf(codes.Unimplemented, "method HeartBeat not implemented")
}

func RegisterWatchServer(s *grpc.Server, srv WatchServer) {
	s.RegisterService(&_Watch_serviceDesc, srv)
}

func _Watch_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Watch/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchServer).Register(ctx, req.(*RegRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Watch_HeartBeat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WatchServer).HeartBeat(&watchHeartBeatServer{stream})
}

type Watch_HeartBeatServer interface {
	Send(*Pong) error
	Recv() (*Ping, error)
	grpc.ServerStream
}

type watchHeartBeatServer struct {
	grpc.ServerStream
}

func (x *watchHeartBeatServer) Send(m *Pong) error {
	return x.ServerStream.SendMsg(m)
}

func (x *watchHeartBeatServer) Recv() (*Ping, error) {
	m := new(Ping)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Watch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Watch",
	HandlerType: (*WatchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Watch_Register_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "HeartBeat",
			Handler:       _Watch_HeartBeat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "watch.proto",
}
